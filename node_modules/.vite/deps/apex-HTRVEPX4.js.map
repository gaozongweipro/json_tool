{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/apex/apex.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/apex/apex.ts\r\nvar conf = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"<\", close: \">\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n    }\r\n  }\r\n};\r\nvar keywords = [\r\n  \"abstract\",\r\n  \"activate\",\r\n  \"and\",\r\n  \"any\",\r\n  \"array\",\r\n  \"as\",\r\n  \"asc\",\r\n  \"assert\",\r\n  \"autonomous\",\r\n  \"begin\",\r\n  \"bigdecimal\",\r\n  \"blob\",\r\n  \"boolean\",\r\n  \"break\",\r\n  \"bulk\",\r\n  \"by\",\r\n  \"case\",\r\n  \"cast\",\r\n  \"catch\",\r\n  \"char\",\r\n  \"class\",\r\n  \"collect\",\r\n  \"commit\",\r\n  \"const\",\r\n  \"continue\",\r\n  \"convertcurrency\",\r\n  \"decimal\",\r\n  \"default\",\r\n  \"delete\",\r\n  \"desc\",\r\n  \"do\",\r\n  \"double\",\r\n  \"else\",\r\n  \"end\",\r\n  \"enum\",\r\n  \"exception\",\r\n  \"exit\",\r\n  \"export\",\r\n  \"extends\",\r\n  \"false\",\r\n  \"final\",\r\n  \"finally\",\r\n  \"float\",\r\n  \"for\",\r\n  \"from\",\r\n  \"future\",\r\n  \"get\",\r\n  \"global\",\r\n  \"goto\",\r\n  \"group\",\r\n  \"having\",\r\n  \"hint\",\r\n  \"if\",\r\n  \"implements\",\r\n  \"import\",\r\n  \"in\",\r\n  \"inner\",\r\n  \"insert\",\r\n  \"instanceof\",\r\n  \"int\",\r\n  \"interface\",\r\n  \"into\",\r\n  \"join\",\r\n  \"last_90_days\",\r\n  \"last_month\",\r\n  \"last_n_days\",\r\n  \"last_week\",\r\n  \"like\",\r\n  \"limit\",\r\n  \"list\",\r\n  \"long\",\r\n  \"loop\",\r\n  \"map\",\r\n  \"merge\",\r\n  \"native\",\r\n  \"new\",\r\n  \"next_90_days\",\r\n  \"next_month\",\r\n  \"next_n_days\",\r\n  \"next_week\",\r\n  \"not\",\r\n  \"null\",\r\n  \"nulls\",\r\n  \"number\",\r\n  \"object\",\r\n  \"of\",\r\n  \"on\",\r\n  \"or\",\r\n  \"outer\",\r\n  \"override\",\r\n  \"package\",\r\n  \"parallel\",\r\n  \"pragma\",\r\n  \"private\",\r\n  \"protected\",\r\n  \"public\",\r\n  \"retrieve\",\r\n  \"return\",\r\n  \"returning\",\r\n  \"rollback\",\r\n  \"savepoint\",\r\n  \"search\",\r\n  \"select\",\r\n  \"set\",\r\n  \"short\",\r\n  \"sort\",\r\n  \"stat\",\r\n  \"static\",\r\n  \"strictfp\",\r\n  \"super\",\r\n  \"switch\",\r\n  \"synchronized\",\r\n  \"system\",\r\n  \"testmethod\",\r\n  \"then\",\r\n  \"this\",\r\n  \"this_month\",\r\n  \"this_week\",\r\n  \"throw\",\r\n  \"throws\",\r\n  \"today\",\r\n  \"tolabel\",\r\n  \"tomorrow\",\r\n  \"transaction\",\r\n  \"transient\",\r\n  \"trigger\",\r\n  \"true\",\r\n  \"try\",\r\n  \"type\",\r\n  \"undelete\",\r\n  \"update\",\r\n  \"upsert\",\r\n  \"using\",\r\n  \"virtual\",\r\n  \"void\",\r\n  \"volatile\",\r\n  \"webservice\",\r\n  \"when\",\r\n  \"where\",\r\n  \"while\",\r\n  \"yesterday\"\r\n];\r\nvar uppercaseFirstLetter = (lowercase) => lowercase.charAt(0).toUpperCase() + lowercase.substr(1);\r\nvar keywordsWithCaseVariations = [];\r\nkeywords.forEach((lowercase) => {\r\n  keywordsWithCaseVariations.push(lowercase);\r\n  keywordsWithCaseVariations.push(lowercase.toUpperCase());\r\n  keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\r\n});\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".apex\",\r\n  keywords: keywordsWithCaseVariations,\r\n  operators: [\r\n    \"=\",\r\n    \">\",\r\n    \"<\",\r\n    \"!\",\r\n    \"~\",\r\n    \"?\",\r\n    \":\",\r\n    \"==\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"&&\",\r\n    \"||\",\r\n    \"++\",\r\n    \"--\",\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"&\",\r\n    \"|\",\r\n    \"^\",\r\n    \"%\",\r\n    \"<<\",\r\n    \">>\",\r\n    \">>>\",\r\n    \"+=\",\r\n    \"-=\",\r\n    \"*=\",\r\n    \"/=\",\r\n    \"&=\",\r\n    \"|=\",\r\n    \"^=\",\r\n    \"%=\",\r\n    \"<<=\",\r\n    \">>=\",\r\n    \">>>=\"\r\n  ],\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  digits: /\\d+(_+\\d+)*/,\r\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n  tokenizer: {\r\n    root: [\r\n      [\r\n        /[a-z_$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /[A-Z][\\w\\$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"type.identifier\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@whitespace\" },\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [\r\n        /@symbols/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"],\r\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\r\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\r\n      [/(@digits)[fFdD]/, \"number.float\"],\r\n      [/(@digits)[lL]?/, \"number\"],\r\n      [/[;,.]/, \"delimiter\"],\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/\"/, \"string\", '@string.\"'],\r\n      [/'/, \"string\", \"@string.'\"],\r\n      [/'[^\\\\']'/, \"string\"],\r\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n      [/'/, \"string.invalid\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@apexdoc\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/[^\\/*]+/, \"comment\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[\\/*]/, \"comment\"]\r\n    ],\r\n    apexdoc: [\r\n      [/[^\\/*]+/, \"comment.doc\"],\r\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\r\n      [/[\\/*]/, \"comment.doc\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"']+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [\r\n        /[\"']/,\r\n        {\r\n          cases: {\r\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
