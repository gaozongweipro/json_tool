{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/cypher/cypher.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/cypher/cypher.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: `.cypher`,\r\n  ignoreCase: true,\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\r\n  ],\r\n  keywords: [\r\n    \"ALL\",\r\n    \"AND\",\r\n    \"AS\",\r\n    \"ASC\",\r\n    \"ASCENDING\",\r\n    \"BY\",\r\n    \"CALL\",\r\n    \"CASE\",\r\n    \"CONTAINS\",\r\n    \"CREATE\",\r\n    \"DELETE\",\r\n    \"DESC\",\r\n    \"DESCENDING\",\r\n    \"DETACH\",\r\n    \"DISTINCT\",\r\n    \"ELSE\",\r\n    \"END\",\r\n    \"ENDS\",\r\n    \"EXISTS\",\r\n    \"IN\",\r\n    \"IS\",\r\n    \"LIMIT\",\r\n    \"MANDATORY\",\r\n    \"MATCH\",\r\n    \"MERGE\",\r\n    \"NOT\",\r\n    \"ON\",\r\n    \"ON\",\r\n    \"OPTIONAL\",\r\n    \"OR\",\r\n    \"ORDER\",\r\n    \"REMOVE\",\r\n    \"RETURN\",\r\n    \"SET\",\r\n    \"SKIP\",\r\n    \"STARTS\",\r\n    \"THEN\",\r\n    \"UNION\",\r\n    \"UNWIND\",\r\n    \"WHEN\",\r\n    \"WHERE\",\r\n    \"WITH\",\r\n    \"XOR\",\r\n    \"YIELD\"\r\n  ],\r\n  builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"],\r\n  builtinFunctions: [\r\n    \"abs\",\r\n    \"acos\",\r\n    \"asin\",\r\n    \"atan\",\r\n    \"atan2\",\r\n    \"avg\",\r\n    \"ceil\",\r\n    \"coalesce\",\r\n    \"collect\",\r\n    \"cos\",\r\n    \"cot\",\r\n    \"count\",\r\n    \"degrees\",\r\n    \"e\",\r\n    \"endNode\",\r\n    \"exists\",\r\n    \"exp\",\r\n    \"floor\",\r\n    \"head\",\r\n    \"id\",\r\n    \"keys\",\r\n    \"labels\",\r\n    \"last\",\r\n    \"left\",\r\n    \"length\",\r\n    \"log\",\r\n    \"log10\",\r\n    \"lTrim\",\r\n    \"max\",\r\n    \"min\",\r\n    \"nodes\",\r\n    \"percentileCont\",\r\n    \"percentileDisc\",\r\n    \"pi\",\r\n    \"properties\",\r\n    \"radians\",\r\n    \"rand\",\r\n    \"range\",\r\n    \"relationships\",\r\n    \"replace\",\r\n    \"reverse\",\r\n    \"right\",\r\n    \"round\",\r\n    \"rTrim\",\r\n    \"sign\",\r\n    \"sin\",\r\n    \"size\",\r\n    \"split\",\r\n    \"sqrt\",\r\n    \"startNode\",\r\n    \"stDev\",\r\n    \"stDevP\",\r\n    \"substring\",\r\n    \"sum\",\r\n    \"tail\",\r\n    \"tan\",\r\n    \"timestamp\",\r\n    \"toBoolean\",\r\n    \"toFloat\",\r\n    \"toInteger\",\r\n    \"toLower\",\r\n    \"toString\",\r\n    \"toUpper\",\r\n    \"trim\",\r\n    \"type\"\r\n  ],\r\n  operators: [\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"%\",\r\n    \"^\",\r\n    \"=\",\r\n    \"<>\",\r\n    \"<\",\r\n    \">\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"->\",\r\n    \"<-\",\r\n    \"-->\",\r\n    \"<--\"\r\n  ],\r\n  escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  digits: /\\d+/,\r\n  octaldigits: /[0-7]+/,\r\n  hexdigits: /[0-9a-fA-F]+/,\r\n  tokenizer: {\r\n    root: [[/[{}[\\]()]/, \"@brackets\"], { include: \"common\" }],\r\n    common: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@numbers\" },\r\n      { include: \"@strings\" },\r\n      [/:[a-zA-Z_][\\w]*/, \"type.identifier\"],\r\n      [\r\n        /[a-zA-Z_][\\w]*(?=\\()/,\r\n        {\r\n          cases: {\r\n            \"@builtinFunctions\": \"predefined.function\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /[a-zA-Z_$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@builtinLiterals\": \"predefined.literal\",\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [/`/, \"identifier.escape\", \"@identifierBacktick\"],\r\n      [/[;,.:|]/, \"delimiter\"],\r\n      [\r\n        /[<>=%+\\-*/^]+/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    numbers: [\r\n      [/-?(@digits)[eE](-?(@digits))?/, \"number.float\"],\r\n      [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"],\r\n      [/-?0x(@hexdigits)/, \"number.hex\"],\r\n      [/-?0(@octaldigits)/, \"number.octal\"],\r\n      [/-?(@digits)/, \"number\"]\r\n    ],\r\n    strings: [\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/\"/, \"string\", \"@stringDouble\"],\r\n      [/'/, \"string\", \"@stringSingle\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"white\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/\\/\\/.*/, \"comment\"],\r\n      [/[^/*]+/, \"comment\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[/*]/, \"comment\"]\r\n    ],\r\n    stringDouble: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string\"],\r\n      [/\\\\./, \"string.invalid\"],\r\n      [/\"/, \"string\", \"@pop\"]\r\n    ],\r\n    stringSingle: [\r\n      [/[^\\\\']+/, \"string\"],\r\n      [/@escapes/, \"string\"],\r\n      [/\\\\./, \"string.invalid\"],\r\n      [/'/, \"string\", \"@pop\"]\r\n    ],\r\n    identifierBacktick: [\r\n      [/[^\\\\`]+/, \"identifier.escape\"],\r\n      [/@escapes/, \"identifier.escape\"],\r\n      [/\\\\./, \"identifier.escape.invalid\"],\r\n      [/`/, \"identifier.escape\", \"@pop\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
