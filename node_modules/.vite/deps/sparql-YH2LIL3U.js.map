{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/sparql/sparql.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/sparql/sparql.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"'\", close: \"'\", notIn: [\"string\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\"] },\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".rq\",\r\n  brackets: [\r\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\r\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\r\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" },\r\n    { token: \"delimiter.angle\", open: \"<\", close: \">\" }\r\n  ],\r\n  keywords: [\r\n    \"add\",\r\n    \"as\",\r\n    \"asc\",\r\n    \"ask\",\r\n    \"base\",\r\n    \"by\",\r\n    \"clear\",\r\n    \"construct\",\r\n    \"copy\",\r\n    \"create\",\r\n    \"data\",\r\n    \"delete\",\r\n    \"desc\",\r\n    \"describe\",\r\n    \"distinct\",\r\n    \"drop\",\r\n    \"false\",\r\n    \"filter\",\r\n    \"from\",\r\n    \"graph\",\r\n    \"group\",\r\n    \"having\",\r\n    \"in\",\r\n    \"insert\",\r\n    \"limit\",\r\n    \"load\",\r\n    \"minus\",\r\n    \"move\",\r\n    \"named\",\r\n    \"not\",\r\n    \"offset\",\r\n    \"optional\",\r\n    \"order\",\r\n    \"prefix\",\r\n    \"reduced\",\r\n    \"select\",\r\n    \"service\",\r\n    \"silent\",\r\n    \"to\",\r\n    \"true\",\r\n    \"undef\",\r\n    \"union\",\r\n    \"using\",\r\n    \"values\",\r\n    \"where\",\r\n    \"with\"\r\n  ],\r\n  builtinFunctions: [\r\n    \"a\",\r\n    \"abs\",\r\n    \"avg\",\r\n    \"bind\",\r\n    \"bnode\",\r\n    \"bound\",\r\n    \"ceil\",\r\n    \"coalesce\",\r\n    \"concat\",\r\n    \"contains\",\r\n    \"count\",\r\n    \"datatype\",\r\n    \"day\",\r\n    \"encode_for_uri\",\r\n    \"exists\",\r\n    \"floor\",\r\n    \"group_concat\",\r\n    \"hours\",\r\n    \"if\",\r\n    \"iri\",\r\n    \"isblank\",\r\n    \"isiri\",\r\n    \"isliteral\",\r\n    \"isnumeric\",\r\n    \"isuri\",\r\n    \"lang\",\r\n    \"langmatches\",\r\n    \"lcase\",\r\n    \"max\",\r\n    \"md5\",\r\n    \"min\",\r\n    \"minutes\",\r\n    \"month\",\r\n    \"now\",\r\n    \"rand\",\r\n    \"regex\",\r\n    \"replace\",\r\n    \"round\",\r\n    \"sameterm\",\r\n    \"sample\",\r\n    \"seconds\",\r\n    \"sha1\",\r\n    \"sha256\",\r\n    \"sha384\",\r\n    \"sha512\",\r\n    \"str\",\r\n    \"strafter\",\r\n    \"strbefore\",\r\n    \"strdt\",\r\n    \"strends\",\r\n    \"strlang\",\r\n    \"strlen\",\r\n    \"strstarts\",\r\n    \"struuid\",\r\n    \"substr\",\r\n    \"sum\",\r\n    \"timezone\",\r\n    \"tz\",\r\n    \"ucase\",\r\n    \"uri\",\r\n    \"uuid\",\r\n    \"year\"\r\n  ],\r\n  ignoreCase: true,\r\n  tokenizer: {\r\n    root: [\r\n      [/<[^\\s\\u00a0>]*>?/, \"tag\"],\r\n      { include: \"@strings\" },\r\n      [/#.*/, \"comment\"],\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[;,.]/, \"delimiter\"],\r\n      [/[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/, \"tag\"],\r\n      [/:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/, \"tag\"],\r\n      [\r\n        /[$?]?[_\\w\\d]+/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword\" },\r\n            \"@builtinFunctions\": { token: \"predefined.sql\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [/\\^\\^/, \"operator.sql\"],\r\n      [/\\^[*+\\-<>=&|^\\/!?]*/, \"operator.sql\"],\r\n      [/[*+\\-<>=&|\\/!?]/, \"operator.sql\"],\r\n      [/@[a-z\\d\\-]*/, \"metatag.html\"],\r\n      [/\\s+/, \"white\"]\r\n    ],\r\n    strings: [\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/'$/, \"string.sql\", \"@pop\"],\r\n      [/'/, \"string.sql\", \"@stringBody\"],\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/\"$/, \"string.sql\", \"@pop\"],\r\n      [/\"/, \"string.sql\", \"@dblStringBody\"]\r\n    ],\r\n    stringBody: [\r\n      [/[^\\\\']+/, \"string.sql\"],\r\n      [/\\\\./, \"string.escape\"],\r\n      [/'/, \"string.sql\", \"@pop\"]\r\n    ],\r\n    dblStringBody: [\r\n      [/[^\\\\\"]+/, \"string.sql\"],\r\n      [/\\\\./, \"string.escape\"],\r\n      [/\"/, \"string.sql\", \"@pop\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
