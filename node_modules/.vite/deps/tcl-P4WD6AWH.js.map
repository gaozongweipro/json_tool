{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/tcl/tcl.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/tcl/tcl.ts\r\nvar conf = {\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ]\r\n};\r\nvar language = {\r\n  tokenPostfix: \".tcl\",\r\n  specialFunctions: [\r\n    \"set\",\r\n    \"unset\",\r\n    \"rename\",\r\n    \"variable\",\r\n    \"proc\",\r\n    \"coroutine\",\r\n    \"foreach\",\r\n    \"incr\",\r\n    \"append\",\r\n    \"lappend\",\r\n    \"linsert\",\r\n    \"lreplace\"\r\n  ],\r\n  mainFunctions: [\r\n    \"if\",\r\n    \"then\",\r\n    \"elseif\",\r\n    \"else\",\r\n    \"case\",\r\n    \"switch\",\r\n    \"while\",\r\n    \"for\",\r\n    \"break\",\r\n    \"continue\",\r\n    \"return\",\r\n    \"package\",\r\n    \"namespace\",\r\n    \"catch\",\r\n    \"exit\",\r\n    \"eval\",\r\n    \"expr\",\r\n    \"uplevel\",\r\n    \"upvar\"\r\n  ],\r\n  builtinFunctions: [\r\n    \"file\",\r\n    \"info\",\r\n    \"concat\",\r\n    \"join\",\r\n    \"lindex\",\r\n    \"list\",\r\n    \"llength\",\r\n    \"lrange\",\r\n    \"lsearch\",\r\n    \"lsort\",\r\n    \"split\",\r\n    \"array\",\r\n    \"parray\",\r\n    \"binary\",\r\n    \"format\",\r\n    \"regexp\",\r\n    \"regsub\",\r\n    \"scan\",\r\n    \"string\",\r\n    \"subst\",\r\n    \"dict\",\r\n    \"cd\",\r\n    \"clock\",\r\n    \"exec\",\r\n    \"glob\",\r\n    \"pid\",\r\n    \"pwd\",\r\n    \"close\",\r\n    \"eof\",\r\n    \"fblocked\",\r\n    \"fconfigure\",\r\n    \"fcopy\",\r\n    \"fileevent\",\r\n    \"flush\",\r\n    \"gets\",\r\n    \"open\",\r\n    \"puts\",\r\n    \"read\",\r\n    \"seek\",\r\n    \"socket\",\r\n    \"tell\",\r\n    \"interp\",\r\n    \"after\",\r\n    \"auto_execok\",\r\n    \"auto_load\",\r\n    \"auto_mkindex\",\r\n    \"auto_reset\",\r\n    \"bgerror\",\r\n    \"error\",\r\n    \"global\",\r\n    \"history\",\r\n    \"load\",\r\n    \"source\",\r\n    \"time\",\r\n    \"trace\",\r\n    \"unknown\",\r\n    \"unset\",\r\n    \"update\",\r\n    \"vwait\",\r\n    \"winfo\",\r\n    \"wm\",\r\n    \"bind\",\r\n    \"event\",\r\n    \"pack\",\r\n    \"place\",\r\n    \"grid\",\r\n    \"font\",\r\n    \"bell\",\r\n    \"clipboard\",\r\n    \"destroy\",\r\n    \"focus\",\r\n    \"grab\",\r\n    \"lower\",\r\n    \"option\",\r\n    \"raise\",\r\n    \"selection\",\r\n    \"send\",\r\n    \"tk\",\r\n    \"tkwait\",\r\n    \"tk_bisque\",\r\n    \"tk_focusNext\",\r\n    \"tk_focusPrev\",\r\n    \"tk_focusFollowsMouse\",\r\n    \"tk_popup\",\r\n    \"tk_setPalette\"\r\n  ],\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  brackets: [\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" }\r\n  ],\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\r\n  tokenizer: {\r\n    root: [\r\n      [\r\n        /[a-zA-Z_]\\w*/,\r\n        {\r\n          cases: {\r\n            \"@specialFunctions\": {\r\n              token: \"keyword.flow\",\r\n              next: \"@specialFunc\"\r\n            },\r\n            \"@mainFunctions\": \"keyword\",\r\n            \"@builtinFunctions\": \"variable\",\r\n            \"@default\": \"operator.scss\"\r\n          }\r\n        }\r\n      ],\r\n      [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, \"metatag\"],\r\n      { include: \"@whitespace\" },\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/@symbols/, \"operator\"],\r\n      [/\\$+(?:\\:\\:)?\\{/, { token: \"identifier\", next: \"@nestedVariable\" }],\r\n      [/@variables/, \"type.identifier\"],\r\n      [/\\.(?!\\d|\\.)[\\w\\-]*/, \"operator.sql\"],\r\n      [/\\d+(\\.\\d+)?/, \"number\"],\r\n      [/\\d+/, \"number\"],\r\n      [/;/, \"delimiter\"],\r\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@dstring\" }],\r\n      [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }]\r\n    ],\r\n    dstring: [\r\n      [/\\[/, { token: \"@brackets\", next: \"@nestedCall\" }],\r\n      [/\\$+(?:\\:\\:)?\\{/, { token: \"identifier\", next: \"@nestedVariable\" }],\r\n      [/@variables/, \"type.identifier\"],\r\n      [/[^\\\\$\\[\\]\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\r\n    ],\r\n    sstring: [\r\n      [/\\[/, { token: \"@brackets\", next: \"@nestedCall\" }],\r\n      [/\\$+(?:\\:\\:)?\\{/, { token: \"identifier\", next: \"@nestedVariable\" }],\r\n      [/@variables/, \"type.identifier\"],\r\n      [/[^\\\\$\\[\\]']+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"white\"],\r\n      [/#.*\\\\$/, { token: \"comment\", next: \"@newlineComment\" }],\r\n      [/#.*(?!\\\\)$/, \"comment\"]\r\n    ],\r\n    newlineComment: [\r\n      [/.*\\\\$/, \"comment\"],\r\n      [/.*(?!\\\\)$/, { token: \"comment\", next: \"@pop\" }]\r\n    ],\r\n    nestedVariable: [\r\n      [/[^\\{\\}\\$]+/, \"type.identifier\"],\r\n      [/\\}/, { token: \"identifier\", next: \"@pop\" }]\r\n    ],\r\n    nestedCall: [\r\n      [/\\[/, { token: \"@brackets\", next: \"@nestedCall\" }],\r\n      [/\\]/, { token: \"@brackets\", next: \"@pop\" }],\r\n      { include: \"root\" }\r\n    ],\r\n    specialFunc: [\r\n      [/\"/, { token: \"string\", next: \"@dstring\" }],\r\n      [/'/, { token: \"string\", next: \"@sstring\" }],\r\n      [/\\S+/, { token: \"type\", next: \"@pop\" }]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
