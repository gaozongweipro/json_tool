{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/bat/bat.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/bat/bat.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"REM\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\r\n      end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  ignoreCase: true,\r\n  tokenPostfix: \".bat\",\r\n  brackets: [\r\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\r\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\r\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\r\n  ],\r\n  keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\r\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  tokenizer: {\r\n    root: [\r\n      [/^(\\s*)(rem(?:\\s.*|))$/, [\"\", \"comment\"]],\r\n      [/(\\@?)(@keywords)(?!\\w)/, [{ token: \"keyword\" }, { token: \"keyword.$2\" }]],\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/setlocal(?!\\w)/, \"keyword.tag-setlocal\"],\r\n      [/endlocal(?!\\w)/, \"keyword.tag-setlocal\"],\r\n      [/[a-zA-Z_]\\w*/, \"\"],\r\n      [/:\\w*/, \"metatag\"],\r\n      [/%[^%]+%/, \"variable\"],\r\n      [/%%[\\w]+(?!\\w)/, \"variable\"],\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/@symbols/, \"delimiter\"],\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\r\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\r\n      [/\\d+/, \"number\"],\r\n      [/[;,.]/, \"delimiter\"],\r\n      [/\"/, \"string\", '@string.\"'],\r\n      [/'/, \"string\", \"@string.'\"]\r\n    ],\r\n    string: [\r\n      [\r\n        /[^\\\\\"'%]+/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"string\", next: \"@popall\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/%[\\w ]+%/, \"variable\"],\r\n      [/%%[\\w]+(?!\\w)/, \"variable\"],\r\n      [\r\n        /[\"']/,\r\n        {\r\n          cases: {\r\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ],\r\n      [/$/, \"string\", \"@popall\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": ";;;AAQA,IAAI,OAAO;AAAA,EACT,UAAU;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,UAAU;AAAA,IACR,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA,EACX;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EAC1B;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EAC1B;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,MACP,OAAO,IAAI,OAAO,8BAA8B;AAAA,MAChD,KAAK,IAAI,OAAO,iCAAiC;AAAA,IACnD;AAAA,EACF;AACF;AACA,IAAI,WAAW;AAAA,EACb,cAAc;AAAA,EACd,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,UAAU;AAAA,IACR,EAAE,OAAO,qBAAqB,MAAM,KAAK,OAAO,IAAI;AAAA,IACpD,EAAE,OAAO,yBAAyB,MAAM,KAAK,OAAO,IAAI;AAAA,IACxD,EAAE,OAAO,oBAAoB,MAAM,KAAK,OAAO,IAAI;AAAA,EACrD;AAAA,EACA,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,WAAW;AAAA,IACT,MAAM;AAAA,MACJ,CAAC,yBAAyB,CAAC,IAAI,SAAS,CAAC;AAAA,MACzC,CAAC,0BAA0B,CAAC,EAAE,OAAO,UAAU,GAAG,EAAE,OAAO,aAAa,CAAC,CAAC;AAAA,MAC1E,CAAC,cAAc,EAAE;AAAA,MACjB,CAAC,kBAAkB,sBAAsB;AAAA,MACzC,CAAC,kBAAkB,sBAAsB;AAAA,MACzC,CAAC,gBAAgB,EAAE;AAAA,MACnB,CAAC,QAAQ,SAAS;AAAA,MAClB,CAAC,WAAW,UAAU;AAAA,MACtB,CAAC,iBAAiB,UAAU;AAAA,MAC5B,CAAC,cAAc,WAAW;AAAA,MAC1B,CAAC,YAAY,WAAW;AAAA,MACxB,CAAC,4BAA4B,cAAc;AAAA,MAC3C,CAAC,iCAAiC,YAAY;AAAA,MAC9C,CAAC,OAAO,QAAQ;AAAA,MAChB,CAAC,SAAS,WAAW;AAAA,MACrB,CAAC,KAAK,UAAU,WAAW;AAAA,MAC3B,CAAC,KAAK,UAAU,WAAW;AAAA,IAC7B;AAAA,IACA,QAAQ;AAAA,MACN;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,QAAQ,EAAE,OAAO,UAAU,MAAM,UAAU;AAAA,YAC3C,YAAY;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAAA,MACA,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,OAAO,uBAAuB;AAAA,MAC/B,CAAC,YAAY,UAAU;AAAA,MACvB,CAAC,iBAAiB,UAAU;AAAA,MAC5B;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,WAAW,EAAE,OAAO,UAAU,MAAM,OAAO;AAAA,YAC3C,YAAY;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAAA,MACA,CAAC,KAAK,UAAU,SAAS;AAAA,IAC3B;AAAA,EACF;AACF;",
  "names": []
}
