{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/liquid/liquid.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\r\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\r\n\r\n// src/basic-languages/liquid/liquid.ts\r\nvar EMPTY_ELEMENTS = [\r\n  \"area\",\r\n  \"base\",\r\n  \"br\",\r\n  \"col\",\r\n  \"embed\",\r\n  \"hr\",\r\n  \"img\",\r\n  \"input\",\r\n  \"keygen\",\r\n  \"link\",\r\n  \"menuitem\",\r\n  \"meta\",\r\n  \"param\",\r\n  \"source\",\r\n  \"track\",\r\n  \"wbr\"\r\n];\r\nvar conf = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n  brackets: [\r\n    [\"<!--\", \"-->\"],\r\n    [\"<\", \">\"],\r\n    [\"{{\", \"}}\"],\r\n    [\"{%\", \"%}\"],\r\n    [\"{\", \"}\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"%\", close: \"%\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"<\", close: \">\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  onEnterRules: [\r\n    {\r\n      beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\r\n      afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\r\n      }\r\n    },\r\n    {\r\n      beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\r\n    }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \"\",\r\n  builtinTags: [\r\n    \"if\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"endif\",\r\n    \"render\",\r\n    \"assign\",\r\n    \"capture\",\r\n    \"endcapture\",\r\n    \"case\",\r\n    \"endcase\",\r\n    \"comment\",\r\n    \"endcomment\",\r\n    \"cycle\",\r\n    \"decrement\",\r\n    \"for\",\r\n    \"endfor\",\r\n    \"include\",\r\n    \"increment\",\r\n    \"layout\",\r\n    \"raw\",\r\n    \"endraw\",\r\n    \"render\",\r\n    \"tablerow\",\r\n    \"endtablerow\",\r\n    \"unless\",\r\n    \"endunless\"\r\n  ],\r\n  builtinFilters: [\r\n    \"abs\",\r\n    \"append\",\r\n    \"at_least\",\r\n    \"at_most\",\r\n    \"capitalize\",\r\n    \"ceil\",\r\n    \"compact\",\r\n    \"date\",\r\n    \"default\",\r\n    \"divided_by\",\r\n    \"downcase\",\r\n    \"escape\",\r\n    \"escape_once\",\r\n    \"first\",\r\n    \"floor\",\r\n    \"join\",\r\n    \"json\",\r\n    \"last\",\r\n    \"lstrip\",\r\n    \"map\",\r\n    \"minus\",\r\n    \"modulo\",\r\n    \"newline_to_br\",\r\n    \"plus\",\r\n    \"prepend\",\r\n    \"remove\",\r\n    \"remove_first\",\r\n    \"replace\",\r\n    \"replace_first\",\r\n    \"reverse\",\r\n    \"round\",\r\n    \"rstrip\",\r\n    \"size\",\r\n    \"slice\",\r\n    \"sort\",\r\n    \"sort_natural\",\r\n    \"split\",\r\n    \"strip\",\r\n    \"strip_html\",\r\n    \"strip_newlines\",\r\n    \"times\",\r\n    \"truncate\",\r\n    \"truncatewords\",\r\n    \"uniq\",\r\n    \"upcase\",\r\n    \"url_decode\",\r\n    \"url_encode\",\r\n    \"where\"\r\n  ],\r\n  constants: [\"true\", \"false\"],\r\n  operators: [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"],\r\n  symbol: /[=><!]+/,\r\n  identifier: /[a-zA-Z_][\\w]*/,\r\n  tokenizer: {\r\n    root: [\r\n      [/\\{\\%\\s*comment\\s*\\%\\}/, \"comment.start.liquid\", \"@comment\"],\r\n      [/\\{\\{/, { token: \"@rematch\", switchTo: \"@liquidState.root\" }],\r\n      [/\\{\\%/, { token: \"@rematch\", switchTo: \"@liquidState.root\" }],\r\n      [/(<)([\\w\\-]+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\r\n      [/(<)([:\\w]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/(<\\/)([\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/</, \"delimiter.html\"],\r\n      [/\\{/, \"delimiter.html\"],\r\n      [/[^<{]+/]\r\n    ],\r\n    comment: [\r\n      [/\\{\\%\\s*endcomment\\s*\\%\\}/, \"comment.end.liquid\", \"@pop\"],\r\n      [/./, \"comment.content.liquid\"]\r\n    ],\r\n    otherTag: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@liquidState.otherTag\"\r\n        }\r\n      ],\r\n      [\r\n        /\\{\\%/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@liquidState.otherTag\"\r\n        }\r\n      ],\r\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/]\r\n    ],\r\n    liquidState: [\r\n      [/\\{\\{/, \"delimiter.output.liquid\"],\r\n      [/\\}\\}/, { token: \"delimiter.output.liquid\", switchTo: \"@$S2.$S3\" }],\r\n      [/\\{\\%/, \"delimiter.tag.liquid\"],\r\n      [/raw\\s*\\%\\}/, \"delimiter.tag.liquid\", \"@liquidRaw\"],\r\n      [/\\%\\}/, { token: \"delimiter.tag.liquid\", switchTo: \"@$S2.$S3\" }],\r\n      { include: \"liquidRoot\" }\r\n    ],\r\n    liquidRaw: [\r\n      [/^(?!\\{\\%\\s*endraw\\s*\\%\\}).+/],\r\n      [/\\{\\%/, \"delimiter.tag.liquid\"],\r\n      [/@identifier/],\r\n      [/\\%\\}/, { token: \"delimiter.tag.liquid\", next: \"@root\" }]\r\n    ],\r\n    liquidRoot: [\r\n      [/\\d+(\\.\\d+)?/, \"number.liquid\"],\r\n      [/\"[^\"]*\"/, \"string.liquid\"],\r\n      [/'[^']*'/, \"string.liquid\"],\r\n      [/\\s+/],\r\n      [\r\n        /@symbol/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"operator.liquid\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      [/\\./],\r\n      [\r\n        /@identifier/,\r\n        {\r\n          cases: {\r\n            \"@constants\": \"keyword.liquid\",\r\n            \"@builtinFilters\": \"predefined.liquid\",\r\n            \"@builtinTags\": \"predefined.liquid\",\r\n            \"@default\": \"variable.liquid\"\r\n          }\r\n        }\r\n      ],\r\n      [/[^}|%]/, \"variable.liquid\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
