{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/scala/scala.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/scala/scala.ts\r\nvar conf = {\r\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  tokenPostfix: \".scala\",\r\n  keywords: [\r\n    \"asInstanceOf\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"classOf\",\r\n    \"def\",\r\n    \"do\",\r\n    \"else\",\r\n    \"extends\",\r\n    \"finally\",\r\n    \"for\",\r\n    \"foreach\",\r\n    \"forSome\",\r\n    \"if\",\r\n    \"import\",\r\n    \"isInstanceOf\",\r\n    \"macro\",\r\n    \"match\",\r\n    \"new\",\r\n    \"object\",\r\n    \"package\",\r\n    \"return\",\r\n    \"throw\",\r\n    \"trait\",\r\n    \"try\",\r\n    \"type\",\r\n    \"until\",\r\n    \"val\",\r\n    \"var\",\r\n    \"while\",\r\n    \"with\",\r\n    \"yield\",\r\n    \"given\",\r\n    \"enum\",\r\n    \"then\"\r\n  ],\r\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\r\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\r\n  modifiers: [\r\n    \"abstract\",\r\n    \"final\",\r\n    \"implicit\",\r\n    \"lazy\",\r\n    \"override\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"sealed\"\r\n  ],\r\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\r\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\r\n  type: /(?:[A-Z][\\w$]*)/,\r\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\r\n  digits: /\\d+(_+\\d+)*/,\r\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\r\n  tokenizer: {\r\n    root: [\r\n      [/\\braw\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstringt\" }],\r\n      [/\\braw\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstring\" }],\r\n      [/\\bs\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstringt\" }],\r\n      [/\\bs\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }],\r\n      [/\\bf\"\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstringt\" }],\r\n      [/\\bf\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstring\" }],\r\n      [/\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringt\" }],\r\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\r\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\r\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\r\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"],\r\n      [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"],\r\n      [/(@digits)[lL]?/, \"number\", \"@allowMethod\"],\r\n      [/\\b_\\*/, \"key\"],\r\n      [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\r\n      [/\\bimport\\b/, \"keyword\", \"@import\"],\r\n      [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]],\r\n      [/\\bcase\\b/, \"keyword\", \"@case\"],\r\n      [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"],\r\n      [\r\n        /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\r\n        [\"keyword\", \"white\", \"identifier\"]\r\n      ],\r\n      [/@name(?=[ \\t]*:(?!:))/, \"variable\"],\r\n      [/(\\.)(@name|@symbols)/, [\"operator\", { token: \"@rematch\", next: \"@allowMethod\" }]],\r\n      [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]],\r\n      [\r\n        /@name/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@softKeywords\": \"keyword\",\r\n            \"@modifiers\": \"keyword.modifier\",\r\n            \"@softModifiers\": \"keyword.modifier\",\r\n            \"@constants\": {\r\n              token: \"constant\",\r\n              next: \"@allowMethod\"\r\n            },\r\n            \"@default\": {\r\n              token: \"identifier\",\r\n              next: \"@allowMethod\"\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      [/@type/, \"type\", \"@allowMethod\"],\r\n      { include: \"@whitespace\" },\r\n      [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\r\n      [/[{(]/, \"@brackets\"],\r\n      [/[})]/, \"@brackets\", \"@allowMethod\"],\r\n      [/\\[/, \"operator.square\"],\r\n      [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"],\r\n      [/]/, \"operator.square\"],\r\n      [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"],\r\n      [/@symbols/, \"operator\"],\r\n      [/[;,\\.]/, \"delimiter\"],\r\n      [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\r\n      [/'[^\\\\']'/, \"string\", \"@allowMethod\"],\r\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", { token: \"string\", next: \"@allowMethod\" }]],\r\n      [/'/, \"string.invalid\"]\r\n    ],\r\n    import: [\r\n      [/;/, \"delimiter\", \"@pop\"],\r\n      [/^|$/, \"\", \"@pop\"],\r\n      [/[ \\t]+/, \"white\"],\r\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/@name|@type/, \"type\"],\r\n      [/[(){}]/, \"@brackets\"],\r\n      [/[[\\]]/, \"operator.square\"],\r\n      [/[\\.,]/, \"delimiter\"]\r\n    ],\r\n    allowMethod: [\r\n      [/^|$/, \"\", \"@pop\"],\r\n      [/[ \\t]+/, \"white\"],\r\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"],\r\n      [\r\n        /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword\", next: \"@pop\" },\r\n            \"->|<-|>:|<:|<%\": { token: \"keyword\", next: \"@pop\" },\r\n            \"@default\": { token: \"@rematch\", next: \"@pop\" }\r\n          }\r\n        }\r\n      ],\r\n      [\"\", \"\", \"@pop\"]\r\n    ],\r\n    comment: [\r\n      [/[^\\/*]+/, \"comment\"],\r\n      [/\\/\\*/, \"comment\", \"@push\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[\\/*]/, \"comment\"]\r\n    ],\r\n    case: [\r\n      [/\\b_\\*/, \"key\"],\r\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"],\r\n      [/\\bif\\b|=>/, \"keyword\", \"@pop\"],\r\n      [/`[^`]+`/, \"identifier\", \"@allowMethod\"],\r\n      [/@name/, \"variable\", \"@allowMethod\"],\r\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\r\n      { include: \"@root\" }\r\n    ],\r\n    vardef: [\r\n      [/\\b_\\*/, \"key\"],\r\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"],\r\n      [/@name/, \"variable\"],\r\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\r\n      [/=|:(?!:)/, \"operator\", \"@pop\"],\r\n      [/$/, \"white\", \"@pop\"],\r\n      { include: \"@root\" }\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [\r\n        /\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ]\r\n    ],\r\n    stringt: [\r\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"(?=\"\"\")/, \"string\"],\r\n      [\r\n        /\"\"\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ],\r\n      [/\"/, \"string\"]\r\n    ],\r\n    fstring: [\r\n      [/@escapes/, \"string.escape\"],\r\n      [\r\n        /\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ],\r\n      [/\\$\\$/, \"string\"],\r\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\r\n      [/\\$\\{/, \"operator\", \"@interp\"],\r\n      [/%%/, \"string\"],\r\n      [\r\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\r\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\r\n      ],\r\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\r\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\r\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\r\n      [/./, \"string\"]\r\n    ],\r\n    fstringt: [\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\"(?=\"\"\")/, \"string\"],\r\n      [\r\n        /\"\"\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ],\r\n      [/\\$\\$/, \"string\"],\r\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\r\n      [/\\$\\{/, \"operator\", \"@interp\"],\r\n      [/%%/, \"string\"],\r\n      [\r\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\r\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\r\n      ],\r\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\r\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\r\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\r\n      [/./, \"string\"]\r\n    ],\r\n    sstring: [\r\n      [/@escapes/, \"string.escape\"],\r\n      [\r\n        /\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ],\r\n      [/\\$\\$/, \"string\"],\r\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\r\n      [/\\$\\{/, \"operator\", \"@interp\"],\r\n      [/./, \"string\"]\r\n    ],\r\n    sstringt: [\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\"(?=\"\"\")/, \"string\"],\r\n      [\r\n        /\"\"\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ],\r\n      [/\\$\\$/, \"string\"],\r\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\r\n      [/\\$\\{/, \"operator\", \"@interp\"],\r\n      [/./, \"string\"]\r\n    ],\r\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], { include: \"@root\" }],\r\n    rawstring: [\r\n      [/[^\"]/, \"string\"],\r\n      [\r\n        /\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ]\r\n    ],\r\n    rawstringt: [\r\n      [/[^\"]/, \"string\"],\r\n      [/\"(?=\"\"\")/, \"string\"],\r\n      [\r\n        /\"\"\"/,\r\n        {\r\n          token: \"string.quote\",\r\n          bracket: \"@close\",\r\n          switchTo: \"@allowMethod\"\r\n        }\r\n      ],\r\n      [/\"/, \"string\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"white\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": ";;;AAQA,IAAI,OAAO;AAAA,EACT,aAAa;AAAA,EACb,UAAU;AAAA,IACR,aAAa;AAAA,IACb,cAAc,CAAC,MAAM,IAAI;AAAA,EAC3B;AAAA,EACA,UAAU;AAAA,IACR,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA,EACX;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EAC1B;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EAC1B;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,MACP,OAAO,IAAI,OAAO,oDAAoD;AAAA,MACtE,KAAK,IAAI,OAAO,sDAAsD;AAAA,IACxE;AAAA,EACF;AACF;AACA,IAAI,WAAW;AAAA,EACb,cAAc;AAAA,EACd,UAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,cAAc,CAAC,MAAM,UAAU,aAAa,OAAO,WAAW,IAAI;AAAA,EAClE,WAAW,CAAC,QAAQ,SAAS,QAAQ,QAAQ,OAAO;AAAA,EACpD,WAAW;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,eAAe,CAAC,UAAU,UAAU,QAAQ,eAAe,OAAO;AAAA,EAClE,MAAM;AAAA,EACN,MAAM;AAAA,EACN,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,SAAS;AAAA,EACT,cAAc;AAAA,EACd,WAAW;AAAA,IACT,MAAM;AAAA,MACJ,CAAC,YAAY,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,cAAc,CAAC;AAAA,MAC7E,CAAC,UAAU,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,aAAa,CAAC;AAAA,MAC1E,CAAC,UAAU,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,YAAY,CAAC;AAAA,MACzE,CAAC,QAAQ,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,WAAW,CAAC;AAAA,MACtE,CAAC,WAAW,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,YAAY,CAAC;AAAA,MAC1E,CAAC,QAAQ,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,WAAW,CAAC;AAAA,MACtE,CAAC,OAAO,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,WAAW,CAAC;AAAA,MACrE,CAAC,KAAK,EAAE,OAAO,gBAAgB,SAAS,SAAS,MAAM,UAAU,CAAC;AAAA,MAClE,CAAC,0CAA0C,gBAAgB,cAAc;AAAA,MACzE,CAAC,qDAAqD,gBAAgB,cAAc;AAAA,MACpF,CAAC,0BAA0B,cAAc,cAAc;AAAA,MACvD,CAAC,mBAAmB,gBAAgB,cAAc;AAAA,MAClD,CAAC,kBAAkB,UAAU,cAAc;AAAA,MAC3C,CAAC,SAAS,KAAK;AAAA,MACf,CAAC,WAAW,WAAW,cAAc;AAAA,MACrC,CAAC,cAAc,WAAW,SAAS;AAAA,MACnC,CAAC,6BAA6B,CAAC,oBAAoB,SAAS,SAAS,CAAC;AAAA,MACtE,CAAC,YAAY,WAAW,OAAO;AAAA,MAC/B,CAAC,cAAc,WAAW,SAAS;AAAA,MACnC;AAAA,QACE;AAAA,QACA,CAAC,WAAW,SAAS,YAAY;AAAA,MACnC;AAAA,MACA,CAAC,yBAAyB,UAAU;AAAA,MACpC,CAAC,wBAAwB,CAAC,YAAY,EAAE,OAAO,YAAY,MAAM,eAAe,CAAC,CAAC;AAAA,MAClF,CAAC,+BAA+B,CAAC,aAAa,SAAS,UAAU,CAAC;AAAA,MAClE;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,aAAa;AAAA,YACb,iBAAiB;AAAA,YACjB,cAAc;AAAA,YACd,kBAAkB;AAAA,YAClB,cAAc;AAAA,cACZ,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,YACA,YAAY;AAAA,cACV,OAAO;AAAA,cACP,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,CAAC,SAAS,QAAQ,cAAc;AAAA,MAChC,EAAE,SAAS,cAAc;AAAA,MACzB,CAAC,4CAA4C,YAAY;AAAA,MACzD,CAAC,QAAQ,WAAW;AAAA,MACpB,CAAC,QAAQ,aAAa,cAAc;AAAA,MACpC,CAAC,MAAM,iBAAiB;AAAA,MACxB,CAAC,iCAAiC,mBAAmB,cAAc;AAAA,MACnE,CAAC,KAAK,iBAAiB;AAAA,MACvB,CAAC,iDAAiD,SAAS;AAAA,MAC3D,CAAC,YAAY,UAAU;AAAA,MACvB,CAAC,UAAU,WAAW;AAAA,MACtB,CAAC,yBAAyB,gBAAgB;AAAA,MAC1C,CAAC,YAAY,UAAU,cAAc;AAAA,MACrC,CAAC,oBAAoB,CAAC,UAAU,iBAAiB,EAAE,OAAO,UAAU,MAAM,eAAe,CAAC,CAAC;AAAA,MAC3F,CAAC,KAAK,gBAAgB;AAAA,IACxB;AAAA,IACA,QAAQ;AAAA,MACN,CAAC,KAAK,aAAa,MAAM;AAAA,MACzB,CAAC,OAAO,IAAI,MAAM;AAAA,MAClB,CAAC,UAAU,OAAO;AAAA,MAClB,CAAC,WAAW,SAAS,MAAM;AAAA,MAC3B,CAAC,QAAQ,WAAW,UAAU;AAAA,MAC9B,CAAC,eAAe,MAAM;AAAA,MACtB,CAAC,UAAU,WAAW;AAAA,MACtB,CAAC,SAAS,iBAAiB;AAAA,MAC3B,CAAC,SAAS,WAAW;AAAA,IACvB;AAAA,IACA,aAAa;AAAA,MACX,CAAC,OAAO,IAAI,MAAM;AAAA,MAClB,CAAC,UAAU,OAAO;AAAA,MAClB,CAAC,WAAW,SAAS,MAAM;AAAA,MAC3B,CAAC,QAAQ,WAAW,UAAU;AAAA,MAC9B,CAAC,mBAAmB,WAAW,MAAM;AAAA,MACrC;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,aAAa,EAAE,OAAO,WAAW,MAAM,OAAO;AAAA,YAC9C,kBAAkB,EAAE,OAAO,WAAW,MAAM,OAAO;AAAA,YACnD,YAAY,EAAE,OAAO,YAAY,MAAM,OAAO;AAAA,UAChD;AAAA,QACF;AAAA,MACF;AAAA,MACA,CAAC,IAAI,IAAI,MAAM;AAAA,IACjB;AAAA,IACA,SAAS;AAAA,MACP,CAAC,WAAW,SAAS;AAAA,MACrB,CAAC,QAAQ,WAAW,OAAO;AAAA,MAC3B,CAAC,QAAQ,WAAW,MAAM;AAAA,MAC1B,CAAC,SAAS,SAAS;AAAA,IACrB;AAAA,IACA,MAAM;AAAA,MACJ,CAAC,SAAS,KAAK;AAAA,MACf,CAAC,sCAAsC,WAAW,cAAc;AAAA,MAChE,CAAC,aAAa,WAAW,MAAM;AAAA,MAC/B,CAAC,WAAW,cAAc,cAAc;AAAA,MACxC,CAAC,SAAS,YAAY,cAAc;AAAA,MACpC,CAAC,wBAAwB,SAAS;AAAA,MAClC,EAAE,SAAS,QAAQ;AAAA,IACrB;AAAA,IACA,QAAQ;AAAA,MACN,CAAC,SAAS,KAAK;AAAA,MACf,CAAC,sCAAsC,SAAS;AAAA,MAChD,CAAC,SAAS,UAAU;AAAA,MACpB,CAAC,wBAAwB,SAAS;AAAA,MAClC,CAAC,YAAY,YAAY,MAAM;AAAA,MAC/B,CAAC,KAAK,SAAS,MAAM;AAAA,MACrB,EAAE,SAAS,QAAQ;AAAA,IACrB;AAAA,IACA,QAAQ;AAAA,MACN,CAAC,eAAe,QAAQ;AAAA,MACxB,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,OAAO,uBAAuB;AAAA,MAC/B;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP,CAAC,eAAe,QAAQ;AAAA,MACxB,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,OAAO,uBAAuB;AAAA,MAC/B,CAAC,YAAY,QAAQ;AAAA,MACrB;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,CAAC,KAAK,QAAQ;AAAA,IAChB;AAAA,IACA,SAAS;AAAA,MACP,CAAC,YAAY,eAAe;AAAA,MAC5B;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,CAAC,QAAQ,QAAQ;AAAA,MACjB,CAAC,mBAAmB,CAAC,YAAY,YAAY,CAAC;AAAA,MAC9C,CAAC,QAAQ,YAAY,SAAS;AAAA,MAC9B,CAAC,MAAM,QAAQ;AAAA,MACf;AAAA,QACE;AAAA,QACA,CAAC,WAAW,oBAAoB,UAAU,SAAS;AAAA,MACrD;AAAA,MACA,CAAC,0CAA0C,CAAC,WAAW,UAAU,SAAS,CAAC;AAAA,MAC3E,CAAC,kCAAkC,CAAC,WAAW,oBAAoB,SAAS,CAAC;AAAA,MAC7E,CAAC,sBAAsB,CAAC,WAAW,SAAS,CAAC;AAAA,MAC7C,CAAC,KAAK,QAAQ;AAAA,IAChB;AAAA,IACA,UAAU;AAAA,MACR,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,YAAY,QAAQ;AAAA,MACrB;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,CAAC,QAAQ,QAAQ;AAAA,MACjB,CAAC,mBAAmB,CAAC,YAAY,YAAY,CAAC;AAAA,MAC9C,CAAC,QAAQ,YAAY,SAAS;AAAA,MAC9B,CAAC,MAAM,QAAQ;AAAA,MACf;AAAA,QACE;AAAA,QACA,CAAC,WAAW,oBAAoB,UAAU,SAAS;AAAA,MACrD;AAAA,MACA,CAAC,0CAA0C,CAAC,WAAW,UAAU,SAAS,CAAC;AAAA,MAC3E,CAAC,kCAAkC,CAAC,WAAW,oBAAoB,SAAS,CAAC;AAAA,MAC7E,CAAC,sBAAsB,CAAC,WAAW,SAAS,CAAC;AAAA,MAC7C,CAAC,KAAK,QAAQ;AAAA,IAChB;AAAA,IACA,SAAS;AAAA,MACP,CAAC,YAAY,eAAe;AAAA,MAC5B;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,CAAC,QAAQ,QAAQ;AAAA,MACjB,CAAC,mBAAmB,CAAC,YAAY,YAAY,CAAC;AAAA,MAC9C,CAAC,QAAQ,YAAY,SAAS;AAAA,MAC9B,CAAC,KAAK,QAAQ;AAAA,IAChB;AAAA,IACA,UAAU;AAAA,MACR,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,YAAY,QAAQ;AAAA,MACrB;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,CAAC,QAAQ,QAAQ;AAAA,MACjB,CAAC,mBAAmB,CAAC,YAAY,YAAY,CAAC;AAAA,MAC9C,CAAC,QAAQ,YAAY,SAAS;AAAA,MAC9B,CAAC,KAAK,QAAQ;AAAA,IAChB;AAAA,IACA,QAAQ,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,CAAC,KAAK,YAAY,MAAM,GAAG,EAAE,SAAS,QAAQ,CAAC;AAAA,IACpF,WAAW;AAAA,MACT,CAAC,QAAQ,QAAQ;AAAA,MACjB;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,IACA,YAAY;AAAA,MACV,CAAC,QAAQ,QAAQ;AAAA,MACjB,CAAC,YAAY,QAAQ;AAAA,MACrB;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,CAAC,KAAK,QAAQ;AAAA,IAChB;AAAA,IACA,YAAY;AAAA,MACV,CAAC,cAAc,OAAO;AAAA,MACtB,CAAC,QAAQ,WAAW,UAAU;AAAA,MAC9B,CAAC,WAAW,SAAS;AAAA,IACvB;AAAA,EACF;AACF;",
  "names": []
}
