{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/elixir/elixir.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/elixir/elixir.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: '\"', close: '\"' }\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\r\n    { open: '\"', close: '\"', notIn: [\"comment\"] },\r\n    { open: '\"\"\"', close: '\"\"\"' },\r\n    { open: \"`\", close: \"`\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"<<\", close: \">>\" }\r\n  ],\r\n  indentationRules: {\r\n    increaseIndentPattern: /^\\s*(after|else|catch|rescue|fn|[^#]*(do|<\\-|\\->|\\{|\\[|\\=))\\s*$/,\r\n    decreaseIndentPattern: /^\\s*((\\}|\\])\\s*$|(after|else|catch|rescue|end)\\b)/\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"source\",\r\n  tokenPostfix: \".elixir\",\r\n  brackets: [\r\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"<<\", close: \">>\", token: \"delimiter.angle.special\" }\r\n  ],\r\n  declarationKeywords: [\r\n    \"def\",\r\n    \"defp\",\r\n    \"defn\",\r\n    \"defnp\",\r\n    \"defguard\",\r\n    \"defguardp\",\r\n    \"defmacro\",\r\n    \"defmacrop\",\r\n    \"defdelegate\",\r\n    \"defcallback\",\r\n    \"defmacrocallback\",\r\n    \"defmodule\",\r\n    \"defprotocol\",\r\n    \"defexception\",\r\n    \"defimpl\",\r\n    \"defstruct\"\r\n  ],\r\n  operatorKeywords: [\"and\", \"in\", \"not\", \"or\", \"when\"],\r\n  namespaceKeywords: [\"alias\", \"import\", \"require\", \"use\"],\r\n  otherKeywords: [\r\n    \"after\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"cond\",\r\n    \"do\",\r\n    \"else\",\r\n    \"end\",\r\n    \"fn\",\r\n    \"for\",\r\n    \"if\",\r\n    \"quote\",\r\n    \"raise\",\r\n    \"receive\",\r\n    \"rescue\",\r\n    \"super\",\r\n    \"throw\",\r\n    \"try\",\r\n    \"unless\",\r\n    \"unquote_splicing\",\r\n    \"unquote\",\r\n    \"with\"\r\n  ],\r\n  constants: [\"true\", \"false\", \"nil\"],\r\n  nameBuiltin: [\"__MODULE__\", \"__DIR__\", \"__ENV__\", \"__CALLER__\", \"__STACKTRACE__\"],\r\n  operator: /-[->]?|!={0,2}|\\*{1,2}|\\/|\\\\\\\\|&{1,3}|\\.\\.?|\\^(?:\\^\\^)?|\\+\\+?|<(?:-|<<|=|>|\\|>|~>?)?|=~|={1,3}|>(?:=|>>)?|\\|~>|\\|>|\\|{1,3}|~>>?|~~~|::/,\r\n  variableName: /[a-z_][a-zA-Z0-9_]*[?!]?/,\r\n  atomName: /[a-zA-Z_][a-zA-Z0-9_@]*[?!]?|@specialAtomName|@operator/,\r\n  specialAtomName: /\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\}/,\r\n  aliasPart: /[A-Z][a-zA-Z0-9_]*/,\r\n  moduleName: /@aliasPart(?:\\.@aliasPart)*/,\r\n  sigilSymmetricDelimiter: /\"\"\"|'''|\"|'|\\/|\\|/,\r\n  sigilStartDelimiter: /@sigilSymmetricDelimiter|<|\\{|\\[|\\(/,\r\n  sigilEndDelimiter: /@sigilSymmetricDelimiter|>|\\}|\\]|\\)/,\r\n  sigilModifiers: /[a-zA-Z0-9]*/,\r\n  decimal: /\\d(?:_?\\d)*/,\r\n  hex: /[0-9a-fA-F](_?[0-9a-fA-F])*/,\r\n  octal: /[0-7](_?[0-7])*/,\r\n  binary: /[01](_?[01])*/,\r\n  escape: /\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}|\\\\./,\r\n  tokenizer: {\r\n    root: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@comments\" },\r\n      { include: \"@keywordsShorthand\" },\r\n      { include: \"@numbers\" },\r\n      { include: \"@identifiers\" },\r\n      { include: \"@strings\" },\r\n      { include: \"@atoms\" },\r\n      { include: \"@sigils\" },\r\n      { include: \"@attributes\" },\r\n      { include: \"@symbols\" }\r\n    ],\r\n    whitespace: [[/\\s+/, \"white\"]],\r\n    comments: [[/(#)(.*)/, [\"comment.punctuation\", \"comment\"]]],\r\n    keywordsShorthand: [\r\n      [/(@atomName)(:)(\\s+)/, [\"constant\", \"constant.punctuation\", \"white\"]],\r\n      [\r\n        /\"(?=([^\"]|#\\{.*?\\}|\\\\\")*\":)/,\r\n        { token: \"constant.delimiter\", next: \"@doubleQuotedStringKeyword\" }\r\n      ],\r\n      [\r\n        /'(?=([^']|#\\{.*?\\}|\\\\')*':)/,\r\n        { token: \"constant.delimiter\", next: \"@singleQuotedStringKeyword\" }\r\n      ]\r\n    ],\r\n    doubleQuotedStringKeyword: [\r\n      [/\":/, { token: \"constant.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringConstantContentInterpol\" }\r\n    ],\r\n    singleQuotedStringKeyword: [\r\n      [/':/, { token: \"constant.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringConstantContentInterpol\" }\r\n    ],\r\n    numbers: [\r\n      [/0b@binary/, \"number.binary\"],\r\n      [/0o@octal/, \"number.octal\"],\r\n      [/0x@hex/, \"number.hex\"],\r\n      [/@decimal\\.@decimal([eE]-?@decimal)?/, \"number.float\"],\r\n      [/@decimal/, \"number\"]\r\n    ],\r\n    identifiers: [\r\n      [\r\n        /\\b(defp?|defnp?|defmacrop?|defguardp?|defdelegate)(\\s+)(@variableName)(?!\\s+@operator)/,\r\n        [\r\n          \"keyword.declaration\",\r\n          \"white\",\r\n          {\r\n            cases: {\r\n              unquote: \"keyword\",\r\n              \"@default\": \"function\"\r\n            }\r\n          }\r\n        ]\r\n      ],\r\n      [\r\n        /(@variableName)(?=\\s*\\.?\\s*\\()/,\r\n        {\r\n          cases: {\r\n            \"@declarationKeywords\": \"keyword.declaration\",\r\n            \"@namespaceKeywords\": \"keyword\",\r\n            \"@otherKeywords\": \"keyword\",\r\n            \"@default\": \"function.call\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /(@moduleName)(\\s*)(\\.)(\\s*)(@variableName)/,\r\n        [\"type.identifier\", \"white\", \"operator\", \"white\", \"function.call\"]\r\n      ],\r\n      [\r\n        /(:)(@atomName)(\\s*)(\\.)(\\s*)(@variableName)/,\r\n        [\"constant.punctuation\", \"constant\", \"white\", \"operator\", \"white\", \"function.call\"]\r\n      ],\r\n      [\r\n        /(\\|>)(\\s*)(@variableName)/,\r\n        [\r\n          \"operator\",\r\n          \"white\",\r\n          {\r\n            cases: {\r\n              \"@otherKeywords\": \"keyword\",\r\n              \"@default\": \"function.call\"\r\n            }\r\n          }\r\n        ]\r\n      ],\r\n      [\r\n        /(&)(\\s*)(@variableName)/,\r\n        [\"operator\", \"white\", \"function.call\"]\r\n      ],\r\n      [\r\n        /@variableName/,\r\n        {\r\n          cases: {\r\n            \"@declarationKeywords\": \"keyword.declaration\",\r\n            \"@operatorKeywords\": \"keyword.operator\",\r\n            \"@namespaceKeywords\": \"keyword\",\r\n            \"@otherKeywords\": \"keyword\",\r\n            \"@constants\": \"constant.language\",\r\n            \"@nameBuiltin\": \"variable.language\",\r\n            \"_.*\": \"comment.unused\",\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [/@moduleName/, \"type.identifier\"]\r\n    ],\r\n    strings: [\r\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@doubleQuotedHeredoc\" }],\r\n      [/'''/, { token: \"string.delimiter\", next: \"@singleQuotedHeredoc\" }],\r\n      [/\"/, { token: \"string.delimiter\", next: \"@doubleQuotedString\" }],\r\n      [/'/, { token: \"string.delimiter\", next: \"@singleQuotedString\" }]\r\n    ],\r\n    doubleQuotedHeredoc: [\r\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringContentInterpol\" }\r\n    ],\r\n    singleQuotedHeredoc: [\r\n      [/'''/, { token: \"string.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringContentInterpol\" }\r\n    ],\r\n    doubleQuotedString: [\r\n      [/\"/, { token: \"string.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringContentInterpol\" }\r\n    ],\r\n    singleQuotedString: [\r\n      [/'/, { token: \"string.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringContentInterpol\" }\r\n    ],\r\n    atoms: [\r\n      [/(:)(@atomName)/, [\"constant.punctuation\", \"constant\"]],\r\n      [/:\"/, { token: \"constant.delimiter\", next: \"@doubleQuotedStringAtom\" }],\r\n      [/:'/, { token: \"constant.delimiter\", next: \"@singleQuotedStringAtom\" }]\r\n    ],\r\n    doubleQuotedStringAtom: [\r\n      [/\"/, { token: \"constant.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringConstantContentInterpol\" }\r\n    ],\r\n    singleQuotedStringAtom: [\r\n      [/'/, { token: \"constant.delimiter\", next: \"@pop\" }],\r\n      { include: \"@stringConstantContentInterpol\" }\r\n    ],\r\n    sigils: [\r\n      [/~[a-z]@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.interpol\" }],\r\n      [/~([A-Z]+)@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.noInterpol\" }]\r\n    ],\r\n    sigil: [\r\n      [/~([a-z]|[A-Z]+)\\{/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.{.}\" }],\r\n      [/~([a-z]|[A-Z]+)\\[/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.[.]\" }],\r\n      [/~([a-z]|[A-Z]+)\\(/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.(.)\" }],\r\n      [/~([a-z]|[A-Z]+)\\</, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.<.>\" }],\r\n      [\r\n        /~([a-z]|[A-Z]+)(@sigilSymmetricDelimiter)/,\r\n        { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.$2.$2\" }\r\n      ]\r\n    ],\r\n    \"sigilStart.interpol.s\": [\r\n      [\r\n        /~s@sigilStartDelimiter/,\r\n        {\r\n          token: \"string.delimiter\",\r\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\r\n        }\r\n      ]\r\n    ],\r\n    \"sigilContinue.interpol.s\": [\r\n      [\r\n        /(@sigilEndDelimiter)@sigilModifiers/,\r\n        {\r\n          cases: {\r\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@stringContentInterpol\" }\r\n    ],\r\n    \"sigilStart.noInterpol.S\": [\r\n      [\r\n        /~S@sigilStartDelimiter/,\r\n        {\r\n          token: \"string.delimiter\",\r\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\r\n        }\r\n      ]\r\n    ],\r\n    \"sigilContinue.noInterpol.S\": [\r\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"string\"],\r\n      [\r\n        /(@sigilEndDelimiter)@sigilModifiers/,\r\n        {\r\n          cases: {\r\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@stringContent\" }\r\n    ],\r\n    \"sigilStart.interpol.r\": [\r\n      [\r\n        /~r@sigilStartDelimiter/,\r\n        {\r\n          token: \"regexp.delimiter\",\r\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\r\n        }\r\n      ]\r\n    ],\r\n    \"sigilContinue.interpol.r\": [\r\n      [\r\n        /(@sigilEndDelimiter)@sigilModifiers/,\r\n        {\r\n          cases: {\r\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\r\n            \"@default\": \"regexp\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@regexpContentInterpol\" }\r\n    ],\r\n    \"sigilStart.noInterpol.R\": [\r\n      [\r\n        /~R@sigilStartDelimiter/,\r\n        {\r\n          token: \"regexp.delimiter\",\r\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\r\n        }\r\n      ]\r\n    ],\r\n    \"sigilContinue.noInterpol.R\": [\r\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"regexp\"],\r\n      [\r\n        /(@sigilEndDelimiter)@sigilModifiers/,\r\n        {\r\n          cases: {\r\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\r\n            \"@default\": \"regexp\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@regexpContent\" }\r\n    ],\r\n    \"sigilStart.interpol\": [\r\n      [\r\n        /~([a-z]|[A-Z]+)@sigilStartDelimiter/,\r\n        {\r\n          token: \"sigil.delimiter\",\r\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\r\n        }\r\n      ]\r\n    ],\r\n    \"sigilContinue.interpol\": [\r\n      [\r\n        /(@sigilEndDelimiter)@sigilModifiers/,\r\n        {\r\n          cases: {\r\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\r\n            \"@default\": \"sigil\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@sigilContentInterpol\" }\r\n    ],\r\n    \"sigilStart.noInterpol\": [\r\n      [\r\n        /~([a-z]|[A-Z]+)@sigilStartDelimiter/,\r\n        {\r\n          token: \"sigil.delimiter\",\r\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\r\n        }\r\n      ]\r\n    ],\r\n    \"sigilContinue.noInterpol\": [\r\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"sigil\"],\r\n      [\r\n        /(@sigilEndDelimiter)@sigilModifiers/,\r\n        {\r\n          cases: {\r\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\r\n            \"@default\": \"sigil\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@sigilContent\" }\r\n    ],\r\n    attributes: [\r\n      [\r\n        /\\@(module|type)?doc (~[sS])?\"\"\"/,\r\n        {\r\n          token: \"comment.block.documentation\",\r\n          next: \"@doubleQuotedHeredocDocstring\"\r\n        }\r\n      ],\r\n      [\r\n        /\\@(module|type)?doc (~[sS])?'''/,\r\n        {\r\n          token: \"comment.block.documentation\",\r\n          next: \"@singleQuotedHeredocDocstring\"\r\n        }\r\n      ],\r\n      [\r\n        /\\@(module|type)?doc (~[sS])?\"/,\r\n        {\r\n          token: \"comment.block.documentation\",\r\n          next: \"@doubleQuotedStringDocstring\"\r\n        }\r\n      ],\r\n      [\r\n        /\\@(module|type)?doc (~[sS])?'/,\r\n        {\r\n          token: \"comment.block.documentation\",\r\n          next: \"@singleQuotedStringDocstring\"\r\n        }\r\n      ],\r\n      [/\\@(module|type)?doc false/, \"comment.block.documentation\"],\r\n      [/\\@(@variableName)/, \"variable\"]\r\n    ],\r\n    doubleQuotedHeredocDocstring: [\r\n      [/\"\"\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\r\n      { include: \"@docstringContent\" }\r\n    ],\r\n    singleQuotedHeredocDocstring: [\r\n      [/'''/, { token: \"comment.block.documentation\", next: \"@pop\" }],\r\n      { include: \"@docstringContent\" }\r\n    ],\r\n    doubleQuotedStringDocstring: [\r\n      [/\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\r\n      { include: \"@docstringContent\" }\r\n    ],\r\n    singleQuotedStringDocstring: [\r\n      [/'/, { token: \"comment.block.documentation\", next: \"@pop\" }],\r\n      { include: \"@docstringContent\" }\r\n    ],\r\n    symbols: [\r\n      [/\\?(\\\\.|[^\\\\\\s])/, \"number.constant\"],\r\n      [/&\\d+/, \"operator\"],\r\n      [/<<<|>>>/, \"operator\"],\r\n      [/[()\\[\\]\\{\\}]|<<|>>/, \"@brackets\"],\r\n      [/\\.\\.\\./, \"identifier\"],\r\n      [/=>/, \"punctuation\"],\r\n      [/@operator/, \"operator\"],\r\n      [/[:;,.%]/, \"punctuation\"]\r\n    ],\r\n    stringContentInterpol: [\r\n      { include: \"@interpolation\" },\r\n      { include: \"@escapeChar\" },\r\n      { include: \"@stringContent\" }\r\n    ],\r\n    stringContent: [[/./, \"string\"]],\r\n    stringConstantContentInterpol: [\r\n      { include: \"@interpolation\" },\r\n      { include: \"@escapeChar\" },\r\n      { include: \"@stringConstantContent\" }\r\n    ],\r\n    stringConstantContent: [[/./, \"constant\"]],\r\n    regexpContentInterpol: [\r\n      { include: \"@interpolation\" },\r\n      { include: \"@escapeChar\" },\r\n      { include: \"@regexpContent\" }\r\n    ],\r\n    regexpContent: [\r\n      [/(\\s)(#)(\\s.*)$/, [\"white\", \"comment.punctuation\", \"comment\"]],\r\n      [/./, \"regexp\"]\r\n    ],\r\n    sigilContentInterpol: [\r\n      { include: \"@interpolation\" },\r\n      { include: \"@escapeChar\" },\r\n      { include: \"@sigilContent\" }\r\n    ],\r\n    sigilContent: [[/./, \"sigil\"]],\r\n    docstringContent: [[/./, \"comment.block.documentation\"]],\r\n    escapeChar: [[/@escape/, \"constant.character.escape\"]],\r\n    interpolation: [[/#{/, { token: \"delimiter.bracket.embed\", next: \"@interpolationContinue\" }]],\r\n    interpolationContinue: [\r\n      [/}/, { token: \"delimiter.bracket.embed\", next: \"@pop\" }],\r\n      { include: \"@root\" }\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
