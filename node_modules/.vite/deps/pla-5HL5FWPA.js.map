{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/pla/pla.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/pla/pla.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"[\", \"]\"],\r\n    [\"<\", \">\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"<\", close: \">\" },\r\n    { open: \"(\", close: \")\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"<\", close: \">\" },\r\n    { open: \"(\", close: \")\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".pla\",\r\n  brackets: [\r\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\r\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\r\n  ],\r\n  keywords: [\r\n    \".i\",\r\n    \".o\",\r\n    \".mv\",\r\n    \".ilb\",\r\n    \".ob\",\r\n    \".label\",\r\n    \".type\",\r\n    \".phase\",\r\n    \".pair\",\r\n    \".symbolic\",\r\n    \".symbolic-output\",\r\n    \".kiss\",\r\n    \".p\",\r\n    \".e\",\r\n    \".end\"\r\n  ],\r\n  comment: /#.*$/,\r\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\r\n  plaContent: /[01\\-~\\|]+/,\r\n  tokenizer: {\r\n    root: [\r\n      { include: \"@whitespace\" },\r\n      [/@comment/, \"comment\"],\r\n      [\r\n        /\\.([a-zA-Z_\\-]+)/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"keyword.$1\" },\r\n            \"@keywords\": {\r\n              cases: {\r\n                \".type\": { token: \"keyword.$1\", next: \"@type\" },\r\n                \"@default\": { token: \"keyword.$1\", next: \"@keywordArg\" }\r\n              }\r\n            },\r\n            \"@default\": { token: \"keyword.$1\" }\r\n          }\r\n        }\r\n      ],\r\n      [/@identifier/, \"identifier\"],\r\n      [/@plaContent/, \"string\"]\r\n    ],\r\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\r\n    type: [{ include: \"@whitespace\" }, [/\\w+/, { token: \"type\", next: \"@pop\" }]],\r\n    keywordArg: [\r\n      [\r\n        /[ \\t\\r\\n]+/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"\", next: \"@pop\" },\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      [/@comment/, \"comment\", \"@pop\"],\r\n      [\r\n        /[<>()\\[\\]]/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"@brackets\", next: \"@pop\" },\r\n            \"@default\": \"@brackets\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /\\-?\\d+/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"number\", next: \"@pop\" },\r\n            \"@default\": \"number\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /@identifier/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"identifier\", next: \"@pop\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /[;=]/,\r\n        {\r\n          cases: {\r\n            \"@eos\": { token: \"delimiter\", next: \"@pop\" },\r\n            \"@default\": \"delimiter\"\r\n          }\r\n        }\r\n      ]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
