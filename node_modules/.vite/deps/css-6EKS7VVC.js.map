{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/css/css.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/css/css.ts\r\nvar conf = {\r\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\r\n  comments: {\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\r\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".css\",\r\n  ws: \"[ \t\\n\\r\\f]*\",\r\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.bracket\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\r\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\r\n  ],\r\n  tokenizer: {\r\n    root: [{ include: \"@selector\" }],\r\n    selector: [\r\n      { include: \"@comments\" },\r\n      { include: \"@import\" },\r\n      { include: \"@strings\" },\r\n      [\r\n        \"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\",\r\n        { token: \"keyword\", next: \"@keyframedeclaration\" }\r\n      ],\r\n      [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }],\r\n      [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }],\r\n      [\r\n        \"(url-prefix)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      [\r\n        \"(url)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      { include: \"@selectorname\" },\r\n      [\"[\\\\*]\", \"tag\"],\r\n      [\"[>\\\\+,]\", \"delimiter\"],\r\n      [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }],\r\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }]\r\n    ],\r\n    selectorbody: [\r\n      { include: \"@comments\" },\r\n      [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"],\r\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\r\n    ],\r\n    selectorname: [\r\n      [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]\r\n    ],\r\n    selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]],\r\n    term: [\r\n      { include: \"@comments\" },\r\n      [\r\n        \"(url-prefix)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      [\r\n        \"(url)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      { include: \"@functioninvocation\" },\r\n      { include: \"@numbers\" },\r\n      { include: \"@name\" },\r\n      { include: \"@strings\" },\r\n      [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"delimiter\"],\r\n      [\",\", \"delimiter\"]\r\n    ],\r\n    rulevalue: [\r\n      { include: \"@comments\" },\r\n      { include: \"@strings\" },\r\n      { include: \"@term\" },\r\n      [\"!important\", \"keyword\"],\r\n      [\";\", \"delimiter\", \"@pop\"],\r\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\r\n    ],\r\n    warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]],\r\n    import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]],\r\n    urldeclaration: [\r\n      { include: \"@strings\" },\r\n      [\"[^)\\r\\n]+\", \"string\"],\r\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\r\n    ],\r\n    parenthizedterm: [\r\n      { include: \"@term\" },\r\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\r\n    ],\r\n    declarationbody: [\r\n      { include: \"@term\" },\r\n      [\";\", \"delimiter\", \"@pop\"],\r\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\r\n    ],\r\n    comments: [\r\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\r\n      [\"\\\\/\\\\/+.*\", \"comment\"]\r\n    ],\r\n    comment: [\r\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\r\n      [/[^*/]+/, \"comment\"],\r\n      [/./, \"comment\"]\r\n    ],\r\n    name: [[\"@identifier\", \"attribute.value\"]],\r\n    numbers: [\r\n      [\"-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"attribute.value.number\", next: \"@units\" }],\r\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]\r\n    ],\r\n    units: [\r\n      [\r\n        \"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\r\n        \"attribute.value.unit\",\r\n        \"@pop\"\r\n      ]\r\n    ],\r\n    keyframedeclaration: [\r\n      [\"@identifier\", \"attribute.value\"],\r\n      [\"{\", { token: \"delimiter.bracket\", switchTo: \"@keyframebody\" }]\r\n    ],\r\n    keyframebody: [\r\n      { include: \"@term\" },\r\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }],\r\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\r\n    ],\r\n    functioninvocation: [\r\n      [\"@identifier\\\\(\", { token: \"attribute.value\", next: \"@functionarguments\" }]\r\n    ],\r\n    functionarguments: [\r\n      [\"\\\\$@identifier@ws:\", \"attribute.name\"],\r\n      [\"[,]\", \"delimiter\"],\r\n      { include: \"@term\" },\r\n      [\"\\\\)\", { token: \"attribute.value\", next: \"@pop\" }]\r\n    ],\r\n    strings: [\r\n      ['~?\"', { token: \"string\", next: \"@stringenddoublequote\" }],\r\n      [\"~?'\", { token: \"string\", next: \"@stringendquote\" }]\r\n    ],\r\n    stringenddoublequote: [\r\n      [\"\\\\\\\\.\", \"string\"],\r\n      ['\"', { token: \"string\", next: \"@pop\" }],\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [\".\", \"string\"]\r\n    ],\r\n    stringendquote: [\r\n      [\"\\\\\\\\.\", \"string\"],\r\n      [\"'\", { token: \"string\", next: \"@pop\" }],\r\n      [/[^\\\\']+/, \"string\"],\r\n      [\".\", \"string\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
