{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/less/less.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/less/less.ts\r\nvar conf = {\r\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n  comments: {\r\n    blockComment: [\"/*\", \"*/\"],\r\n    lineComment: \"//\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\r\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".less\",\r\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\r\n  identifierPlus: \"-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\r\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\r\n  ],\r\n  tokenizer: {\r\n    root: [\r\n      { include: \"@nestedJSBegin\" },\r\n      [\"[ \\\\t\\\\r\\\\n]+\", \"\"],\r\n      { include: \"@comments\" },\r\n      { include: \"@keyword\" },\r\n      { include: \"@strings\" },\r\n      { include: \"@numbers\" },\r\n      [\"[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))\", \"attribute.name\", \"@attribute\"],\r\n      [\"url(\\\\-prefix)?\\\\(\", { token: \"tag\", next: \"@urldeclaration\" }],\r\n      [\"[{}()\\\\[\\\\]]\", \"@brackets\"],\r\n      [\"[,:;]\", \"delimiter\"],\r\n      [\"#@identifierPlus\", \"tag.id\"],\r\n      [\"&\", \"tag\"],\r\n      [\"\\\\.@identifierPlus(?=\\\\()\", \"tag.class\", \"@attribute\"],\r\n      [\"\\\\.@identifierPlus\", \"tag.class\"],\r\n      [\"@identifierPlus\", \"tag\"],\r\n      { include: \"@operators\" },\r\n      [\"@(@identifier(?=[:,\\\\)]))\", \"variable\", \"@attribute\"],\r\n      [\"@(@identifier)\", \"variable\"],\r\n      [\"@\", \"key\", \"@atRules\"]\r\n    ],\r\n    nestedJSBegin: [\r\n      [\"``\", \"delimiter.backtick\"],\r\n      [\r\n        \"`\",\r\n        {\r\n          token: \"delimiter.backtick\",\r\n          next: \"@nestedJSEnd\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ]\r\n    ],\r\n    nestedJSEnd: [\r\n      [\r\n        \"`\",\r\n        {\r\n          token: \"delimiter.backtick\",\r\n          next: \"@pop\",\r\n          nextEmbedded: \"@pop\"\r\n        }\r\n      ]\r\n    ],\r\n    operators: [[\"[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]\", \"operator\"]],\r\n    keyword: [\r\n      [\r\n        \"(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b\",\r\n        \"keyword\"\r\n      ]\r\n    ],\r\n    urldeclaration: [\r\n      { include: \"@strings\" },\r\n      [\"[^)\\r\\n]+\", \"string\"],\r\n      [\"\\\\)\", { token: \"tag\", next: \"@pop\" }]\r\n    ],\r\n    attribute: [\r\n      { include: \"@nestedJSBegin\" },\r\n      { include: \"@comments\" },\r\n      { include: \"@strings\" },\r\n      { include: \"@numbers\" },\r\n      { include: \"@keyword\" },\r\n      [\"[a-zA-Z\\\\-]+(?=\\\\()\", \"attribute.value\", \"@attribute\"],\r\n      [\">\", \"operator\", \"@pop\"],\r\n      [\"@identifier\", \"attribute.value\"],\r\n      { include: \"@operators\" },\r\n      [\"@(@identifier)\", \"variable\"],\r\n      [\"[)\\\\}]\", \"@brackets\", \"@pop\"],\r\n      [\"[{}()\\\\[\\\\]>]\", \"@brackets\"],\r\n      [\"[;]\", \"delimiter\", \"@pop\"],\r\n      [\"[,=:]\", \"delimiter\"],\r\n      [\"\\\\s\", \"\"],\r\n      [\".\", \"attribute.value\"]\r\n    ],\r\n    comments: [\r\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\r\n      [\"\\\\/\\\\/+.*\", \"comment\"]\r\n    ],\r\n    comment: [\r\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\r\n      [\".\", \"comment\"]\r\n    ],\r\n    numbers: [\r\n      [\"(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"attribute.value.number\", next: \"@units\" }],\r\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]\r\n    ],\r\n    units: [\r\n      [\r\n        \"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\r\n        \"attribute.value.unit\",\r\n        \"@pop\"\r\n      ]\r\n    ],\r\n    strings: [\r\n      ['~?\"', { token: \"string.delimiter\", next: \"@stringsEndDoubleQuote\" }],\r\n      [\"~?'\", { token: \"string.delimiter\", next: \"@stringsEndQuote\" }]\r\n    ],\r\n    stringsEndDoubleQuote: [\r\n      ['\\\\\\\\\"', \"string\"],\r\n      ['\"', { token: \"string.delimiter\", next: \"@popall\" }],\r\n      [\".\", \"string\"]\r\n    ],\r\n    stringsEndQuote: [\r\n      [\"\\\\\\\\'\", \"string\"],\r\n      [\"'\", { token: \"string.delimiter\", next: \"@popall\" }],\r\n      [\".\", \"string\"]\r\n    ],\r\n    atRules: [\r\n      { include: \"@comments\" },\r\n      { include: \"@strings\" },\r\n      [\"[()]\", \"delimiter\"],\r\n      [\"[\\\\{;]\", \"delimiter\", \"@pop\"],\r\n      [\".\", \"key\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
