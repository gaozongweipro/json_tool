{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/shell/shell.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.44.0(3e047efd345ff102c8c61b5398fb30845aaac166)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n// src/basic-languages/shell/shell.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  ignoreCase: true,\r\n  tokenPostfix: \".shell\",\r\n  brackets: [\r\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\r\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\r\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\r\n  ],\r\n  keywords: [\r\n    \"if\",\r\n    \"then\",\r\n    \"do\",\r\n    \"else\",\r\n    \"elif\",\r\n    \"while\",\r\n    \"until\",\r\n    \"for\",\r\n    \"in\",\r\n    \"esac\",\r\n    \"fi\",\r\n    \"fin\",\r\n    \"fil\",\r\n    \"done\",\r\n    \"exit\",\r\n    \"set\",\r\n    \"unset\",\r\n    \"export\",\r\n    \"function\"\r\n  ],\r\n  builtins: [\r\n    \"ab\",\r\n    \"awk\",\r\n    \"bash\",\r\n    \"beep\",\r\n    \"cat\",\r\n    \"cc\",\r\n    \"cd\",\r\n    \"chown\",\r\n    \"chmod\",\r\n    \"chroot\",\r\n    \"clear\",\r\n    \"cp\",\r\n    \"curl\",\r\n    \"cut\",\r\n    \"diff\",\r\n    \"echo\",\r\n    \"find\",\r\n    \"gawk\",\r\n    \"gcc\",\r\n    \"get\",\r\n    \"git\",\r\n    \"grep\",\r\n    \"hg\",\r\n    \"kill\",\r\n    \"killall\",\r\n    \"ln\",\r\n    \"ls\",\r\n    \"make\",\r\n    \"mkdir\",\r\n    \"openssl\",\r\n    \"mv\",\r\n    \"nc\",\r\n    \"node\",\r\n    \"npm\",\r\n    \"ping\",\r\n    \"ps\",\r\n    \"restart\",\r\n    \"rm\",\r\n    \"rmdir\",\r\n    \"sed\",\r\n    \"service\",\r\n    \"sh\",\r\n    \"shopt\",\r\n    \"shred\",\r\n    \"source\",\r\n    \"sort\",\r\n    \"sleep\",\r\n    \"ssh\",\r\n    \"start\",\r\n    \"stop\",\r\n    \"su\",\r\n    \"sudo\",\r\n    \"svn\",\r\n    \"tee\",\r\n    \"telnet\",\r\n    \"top\",\r\n    \"touch\",\r\n    \"vi\",\r\n    \"vim\",\r\n    \"wall\",\r\n    \"wc\",\r\n    \"wget\",\r\n    \"who\",\r\n    \"write\",\r\n    \"yes\",\r\n    \"zsh\"\r\n  ],\r\n  startingWithDash: /\\-+\\w+/,\r\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\r\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n  tokenizer: {\r\n    root: [\r\n      [/@identifiersWithDashes/, \"\"],\r\n      [/(\\s)((?:@startingWithDash)+)/, [\"white\", \"attribute.name\"]],\r\n      [\r\n        /[a-zA-Z]\\w*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@builtins\": \"type.identifier\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      { include: \"@whitespace\" },\r\n      { include: \"@strings\" },\r\n      { include: \"@parameters\" },\r\n      { include: \"@heredoc\" },\r\n      [/[{}\\[\\]()]/, \"@brackets\"],\r\n      [/@symbols/, \"delimiter\"],\r\n      { include: \"@numbers\" },\r\n      [/[,;]/, \"delimiter\"]\r\n    ],\r\n    whitespace: [\r\n      [/\\s+/, \"white\"],\r\n      [/(^#!.*$)/, \"metatag\"],\r\n      [/(^#.*$)/, \"comment\"]\r\n    ],\r\n    numbers: [\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\r\n      [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"],\r\n      [/\\d+/, \"number\"]\r\n    ],\r\n    strings: [\r\n      [/'/, \"string\", \"@stringBody\"],\r\n      [/\"/, \"string\", \"@dblStringBody\"]\r\n    ],\r\n    stringBody: [\r\n      [/'/, \"string\", \"@popall\"],\r\n      [/./, \"string\"]\r\n    ],\r\n    dblStringBody: [\r\n      [/\"/, \"string\", \"@popall\"],\r\n      [/./, \"string\"]\r\n    ],\r\n    heredoc: [\r\n      [\r\n        /(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/,\r\n        [\r\n          \"constants\",\r\n          \"white\",\r\n          \"string.heredoc.delimiter\",\r\n          \"string.heredoc\",\r\n          \"string.heredoc.delimiter\"\r\n        ]\r\n      ]\r\n    ],\r\n    parameters: [\r\n      [/\\$\\d+/, \"variable.predefined\"],\r\n      [/\\$\\w+/, \"variable\"],\r\n      [/\\$[*@#?\\-$!0_]/, \"variable\"],\r\n      [/\\$'/, \"variable\", \"@parameterBodyQuote\"],\r\n      [/\\$\"/, \"variable\", \"@parameterBodyDoubleQuote\"],\r\n      [/\\$\\(/, \"variable\", \"@parameterBodyParen\"],\r\n      [/\\$\\{/, \"variable\", \"@parameterBodyCurlyBrace\"]\r\n    ],\r\n    parameterBodyQuote: [\r\n      [/[^#:%*@\\-!_']+/, \"variable\"],\r\n      [/[#:%*@\\-!_]/, \"delimiter\"],\r\n      [/[']/, \"variable\", \"@pop\"]\r\n    ],\r\n    parameterBodyDoubleQuote: [\r\n      [/[^#:%*@\\-!_\"]+/, \"variable\"],\r\n      [/[#:%*@\\-!_]/, \"delimiter\"],\r\n      [/[\"]/, \"variable\", \"@pop\"]\r\n    ],\r\n    parameterBodyParen: [\r\n      [/[^#:%*@\\-!_)]+/, \"variable\"],\r\n      [/[#:%*@\\-!_]/, \"delimiter\"],\r\n      [/[)]/, \"variable\", \"@pop\"]\r\n    ],\r\n    parameterBodyCurlyBrace: [\r\n      [/[^#:%*@\\-!_}]+/, \"variable\"],\r\n      [/[#:%*@\\-!_]/, \"delimiter\"],\r\n      [/[}]/, \"variable\", \"@pop\"]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
